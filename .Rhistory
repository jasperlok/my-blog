install.packages(p)
}
library(p, character.only = T)
}
knitr::opts_chunk$set(fig.retina = 3,
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
out.width="90%")
library(captioner)
knitr::include_graphics("image/kmeans_1.jpg")
knitr::include_graphics("image/kmeans_2.jpg")
knitr::include_graphics("image/kmeans_3.jpg")
knitr::include_graphics("image/kmeans_4.jpg")
knitr::include_graphics("image/kmeans_5.jpg")
knitr::include_graphics("image/kmeans_6.jpg")
knitr::include_graphics("image/kmeans_7.jpg")
knitr::include_graphics("image/kmeans_8.jpg")
knitr::include_graphics("image/kmeans_9.jpg")
knitr::include_graphics("image/kmeans_10.jpg")
knitr::include_graphics("image/kmeans_11.jpg")
knitr::include_graphics("image/kmeans_12.jpg")
knitr::include_graphics("image/deposit.jpg")
packages <- c('tidyverse', 'readr', 'skimr', 'funModeling', 'ggmosaic', 'tidymodels', 'plotly', 'corrplot', 'GGally')
for(p in packages){
if(!require (p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
set.seed(12345)
df <- read_delim("data/bank-full.csv", delim = ";") %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(month = ordered(month, levels = c("jan",
"feb",
"mar",
"apr",
"may",
"jun",
"jul",
"aug",
"sep",
"oct",
"nov",
"dec"))) %>%
sample_frac(size = 0.3) %>%
filter(previous < 100)
skim(df)
df_1 <- df %>%
mutate(pdays_supplied = case_when(pdays == -1 ~ "No",
TRUE ~ "Yes"),
pdays_supplied = as.factor(pdays_supplied),
pdays_recoded = case_when(pdays == -1 ~ 0,
TRUE ~ pdays)) %>%
dplyr::select(-pdays)
num_list <- df %>%
select_if(is.numeric) %>%
names()
for(i in num_list){
temp <- ggplot(df, aes(x = !!sym(i), color = y)) +
geom_density() +
labs(title = paste0("Density Graph on ", sym(i)))
print(temp)
}
cat_list <- df %>%
select_if(negate(is.numeric)) %>%
dplyr::select(-c(y)) %>%
names()
for(i in cat_list){
temp <- ggplot(df) +
geom_mosaic(aes(x = product(y, !!sym(i)), fill = y)) +
labs(title = paste0("Mosaic Plot on ", sym(i))) +
theme(axis.text.x = element_text(angle = 90))
print(temp)
}
df_1_num <- df_1 %>%
select_if(is.numeric)
corrplot(cor(df_1_num, use="pairwise.complete.obs"),
method = "number",
type = "upper",
tl.cex = 0.65,
number.cex = 0.65,
diag = FALSE)
kclusts_1 <-
tibble(k = 3:9) %>%
mutate(
kclust = map(k, ~kmeans(df_1_num, algorithm="Lloyd", .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, df_1_num)
)
clusters_1 <-
kclusts_1 %>%
unnest(cols = c(tidied))
assignments_1 <-
kclusts_1 %>%
unnest(cols = c(augmented))
clusterings_1 <-
kclusts_1 %>%
unnest(cols = c(glanced))
ggplot(clusterings_1, aes(k, tot.withinss)) +
geom_line() +
geom_point()
kclusts_result_1 <- kclusts_1 %>%
pull(kclust) %>%
pluck(5)
kclusts_result_1$centers
df_1_scale <- df_1 %>%
mutate(across(where(is.numeric), scale))
skim(df_1_scale)
df_1_scale_num <- df_1_scale %>%
select_if(is.numeric)
kclusts_1_scale <-
tibble(k = 3:10) %>%
mutate(
kclust = map(k, ~kmeans(df_1_scale_num, algorithm="Lloyd", .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, df_1_scale_num)
)
clusters_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(tidied))
assignments_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(augmented))
clusterings_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(glanced))
ggplot(clusterings_1_scale, aes(k, tot.withinss)) +
geom_line() +
geom_point()
kclusts_result_1_scale <- kclusts_1_scale %>%
pull(kclust) %>%
pluck(5)
df_1_scale_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_scale_num %>%
sample_frac(size = 0.1) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster") #, scale="center")
ggplotly(kclusts_result_1_scale_graph)
temp <- df_1_num
temp$cluster <- kclusts_result_1_scale$cluster
var_list <- df_1_num %>%
names()
cluster <- c(1,2,3,4,5,6,7)
result <- as.data.frame(cluster)
for(i in var_list){
temp_result <- temp %>%
group_by(cluster) %>%
summarise({{i}} := mean(!!sym(i))) %>%
dplyr::select(-cluster)
result <- cbind(result, temp_result)
}
result
rm_list <- c("df", "df_1", "df_1_num", "df_1_scale", "df_1_scale_num", "temp", "kclusts_result_1_graph")
rm(list = rm_list)
knitr::include_graphics("image/fungi.jpg")
df_1_scale_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
options(htmltools.dir.version = FALSE)
packages <- c("captioner", "knitr")
for (p in packages){
if(!require (p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
knitr::opts_chunk$set(fig.retina = 3,
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
out.width="90%")
library(captioner)
knitr::include_graphics("image/kmeans_1.jpg")
knitr::include_graphics("image/kmeans_2.jpg")
knitr::include_graphics("image/kmeans_3.jpg")
knitr::include_graphics("image/kmeans_4.jpg")
knitr::include_graphics("image/kmeans_5.jpg")
knitr::include_graphics("image/kmeans_6.jpg")
knitr::include_graphics("image/kmeans_7.jpg")
knitr::include_graphics("image/kmeans_8.jpg")
knitr::include_graphics("image/kmeans_9.jpg")
knitr::include_graphics("image/kmeans_10.jpg")
knitr::include_graphics("image/kmeans_11.jpg")
knitr::include_graphics("image/kmeans_12.jpg")
knitr::include_graphics("image/deposit.jpg")
packages <- c('tidyverse', 'readr', 'skimr', 'funModeling', 'ggmosaic', 'tidymodels', 'plotly', 'corrplot', 'GGally')
for(p in packages){
if(!require (p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
set.seed(12345)
df <- read_delim("data/bank-full.csv", delim = ";") %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(month = ordered(month, levels = c("jan",
"feb",
"mar",
"apr",
"may",
"jun",
"jul",
"aug",
"sep",
"oct",
"nov",
"dec"))) %>%
sample_frac(size = 0.3) %>%
filter(previous < 100)
skim(df)
df_1 <- df %>%
mutate(pdays_supplied = case_when(pdays == -1 ~ "No",
TRUE ~ "Yes"),
pdays_supplied = as.factor(pdays_supplied),
pdays_recoded = case_when(pdays == -1 ~ 0,
TRUE ~ pdays)) %>%
dplyr::select(-pdays)
num_list <- df %>%
select_if(is.numeric) %>%
names()
for(i in num_list){
temp <- ggplot(df, aes(x = !!sym(i), color = y)) +
geom_density() +
labs(title = paste0("Density Graph on ", sym(i)))
print(temp)
}
cat_list <- df %>%
select_if(negate(is.numeric)) %>%
dplyr::select(-c(y)) %>%
names()
for(i in cat_list){
temp <- ggplot(df) +
geom_mosaic(aes(x = product(y, !!sym(i)), fill = y)) +
labs(title = paste0("Mosaic Plot on ", sym(i))) +
theme(axis.text.x = element_text(angle = 90))
print(temp)
}
df_1_num <- df_1 %>%
select_if(is.numeric)
corrplot(cor(df_1_num, use="pairwise.complete.obs"),
method = "number",
type = "upper",
tl.cex = 0.65,
number.cex = 0.65,
diag = FALSE)
kclusts_1 <-
tibble(k = 3:9) %>%
mutate(
kclust = map(k, ~kmeans(df_1_num, algorithm="Lloyd", .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, df_1_num)
)
clusters_1 <-
kclusts_1 %>%
unnest(cols = c(tidied))
assignments_1 <-
kclusts_1 %>%
unnest(cols = c(augmented))
clusterings_1 <-
kclusts_1 %>%
unnest(cols = c(glanced))
ggplot(clusterings_1, aes(k, tot.withinss)) +
geom_line() +
geom_point()
kclusts_result_1 <- kclusts_1 %>%
pull(kclust) %>%
pluck(5)
kclusts_result_1$centers
df_1_scale <- df_1 %>%
mutate(across(where(is.numeric), scale))
skim(df_1_scale)
df_1_scale_num <- df_1_scale %>%
select_if(is.numeric)
kclusts_1_scale <-
tibble(k = 3:10) %>%
mutate(
kclust = map(k, ~kmeans(df_1_scale_num, algorithm="Lloyd", .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, df_1_scale_num)
)
clusters_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(tidied))
assignments_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(augmented))
clusterings_1_scale <-
kclusts_1_scale %>%
unnest(cols = c(glanced))
ggplot(clusterings_1_scale, aes(k, tot.withinss)) +
geom_line() +
geom_point()
kclusts_result_1_scale <- kclusts_1_scale %>%
pull(kclust) %>%
pluck(5)
df_1_scale_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_scale_num %>%
sample_frac(size = 0.1) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
temp <- df_1_num
temp$cluster <- kclusts_result_1_scale$cluster
var_list <- df_1_num %>%
names()
cluster <- c(1,2,3,4,5,6,7)
result <- as.data.frame(cluster)
for(i in var_list){
temp_result <- temp %>%
group_by(cluster) %>%
summarise({{i}} := mean(!!sym(i))) %>%
dplyr::select(-cluster)
result <- cbind(result, temp_result)
}
result
knitr::include_graphics("image/fungi.jpg")
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.1) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.05) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.05) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="uniminmax")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.05) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.05) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="std")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.05) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1 %>%
select_if(is.numeric) %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
df_1$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1 %>%
#select_if(is.numeric) %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
df_1$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1 %>%
select_if(is.numeric) %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
df_1$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1 %>%
select_if(is.numeric) #%>%
#  sample_frac(size = 0.01) %>%
#  ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
#ggplotly(kclusts_result_1_scale_graph)
View(kclusts_result_1_scale_graph)
df_1$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1 %>%
select_if(is.numeric) %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
df_1_num <- df_1 %>%
select_if(is.numeric)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
#ggplotly(kclusts_result_1_scale_graph)
df_1_num <- df_1 %>%
select_if(is.numeric)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
kclusts_result_1_scale <- kclusts_1_scale %>%
pull(kclust) %>%
pluck(6)
kclusts_result_1_scale
df_1_num <- df_1 %>%
select_if(is.numeric)
df_1_num$cluster <- as.factor(kclusts_result_1_scale$cluster)
kclusts_result_1_scale_graph <- df_1_num %>%
sample_frac(size = 0.01) %>%
ggparcoord(columns = c(1:7), groupColumn = "cluster", scale="center")
ggplotly(kclusts_result_1_scale_graph)
var_list <- df_1_num %>%
names()
cluster <- c(1,2,3,4,5,6,7,8)
result <- as.data.frame(cluster)
for(i in var_list){
temp_result <- df_1_num %>%
group_by(cluster) %>%
summarise({{i}} := mean(!!sym(i))) %>%
dplyr::select(-cluster)
result <- cbind(result, temp_result)
}
result
kclusts_result_1_scale$size
cluster <- c(1,2,3,4,5,6,7,8)
result <- as.data.frame(cluster)
for(i in var_list){
temp_result <- df_1_num %>%
group_by(cluster) %>%
summarise({{i}} := mean(!!sym(i))) %>%
dplyr::select(-cluster)
result <- cbind(result, temp_result)
}
result
corrplot(cor(df_1_scale_num, use="pairwise.complete.obs"),
method = "number",
type = "upper",
tl.cex = 0.65,
number.cex = 0.65,
diag = FALSE)
options(htmltools.dir.version = FALSE)
packages <- c("captioner", "knitr")
for (p in packages){
if(!require (p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
knitr::opts_chunk$set(fig.retina = 3,
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
out.width="90%")
library(captioner)
knitr::include_graphics("image/kmeans_1.jpg")
knitr::include_graphics("image/kmeans_2.jpg")
knitr::include_graphics("image/kmeans_3.jpg")
knitr::include_graphics("image/kmeans_4.jpg")
knitr::include_graphics("image/kmeans_5.jpg")
knitr::include_graphics("image/kmeans_6.jpg")
knitr::include_graphics("image/kmeans_7.jpg")
knitr::include_graphics("image/kmeans_8.jpg")
knitr::include_graphics("image/kmeans_9.jpg")
knitr::include_graphics("image/kmeans_10.jpg")
knitr::include_graphics("image/kmeans_11.jpg")
knitr::include_graphics("image/kmeans_12.jpg")
knitr::include_graphics("image/deposit.jpg")
packages <- c('tidyverse', 'readr', 'skimr', 'funModeling', 'ggmosaic',
'tidymodels', 'plotly', 'corrplot', 'GGally')
for(p in packages){
if(!require (p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
set.seed(12345)
df <- read_delim("data/bank-full.csv", delim = ";") %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(month = ordered(month, levels = c("jan",
"feb",
"mar",
"apr",
"may",
"jun",
"jul",
"aug",
"sep",
"oct",
"nov",
"dec"))) %>%
sample_frac(size = 0.3)
df <- df %>%
filter(previous < 100)
skim(df)
df_1 <- df %>%
mutate(pdays_supplied = case_when(pdays == -1 ~ "No",
TRUE ~ "Yes"),
pdays_supplied = as.factor(pdays_supplied),
pdays_recoded = case_when(pdays == -1 ~ 0,
TRUE ~ pdays)) %>%
dplyr::select(-pdays)
df_1_scale <- df_1 %>%
mutate(across(where(is.numeric), scale))
df_1_scale_num <- df_1_scale %>%
select_if(is.numeric)
corrplot(cor(df_1_scale_num, use="pairwise.complete.obs"),
method = "number",
type = "upper",
tl.cex = 0.65,
number.cex = 0.65,
diag = FALSE)
df %>% summarise(average = mean(balance))
16222/1340
264/30
View(df)
